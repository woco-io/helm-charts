apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with .Values.labels }}
  labels:  
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  name: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.replicas | default 1 }}
  {{- with .Values.selector }}
  selector:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.strategy }}
  strategy:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
      {{- range $k, $v := .Values.selector.matchLabels }}
        {{ $k }}: {{ $v }}
      {{- end }}
      {{- with .Values.labels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.annotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.initContainers }}
      initContainers:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.app.name }}
          image: {{ .Values.app.image.name }}:{{ .Values.app.image.tag }}
          imagePullPolicy: {{ .Values.app.image.pullPolicy | default "IfNotPresent" }}
          {{- if or .Values.app.env .Values.app.port }}
          env:
          {{- if .Values.app.port }}
          - name: APP_SERVER_PORT
            value: {{ .Values.app.port }}
          {{- end }}
          {{- if .Values.app.env }}
          {{- range $k, $v :=  $.Values.app.env }}
          - name: {{ $k }}
            value: {{ $v | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: {{ (.Values.app.liveness).path | default "/actuator/health/liveness" }}
              port: {{ .Values.app.port }}
            initialDelaySeconds: {{ (.Values.app.liveness).delay | default 10 }}
            periodSeconds: {{ (.Values.app.liveness).period | default 5 }}
          readinessProbe:
            httpGet:
              path: {{ (.Values.app.readiness).path | default "/actuator/health/readiness" }}
              port: {{ .Values.app.port }}
            initialDelaySeconds: {{ (.Values.app.readiness).delay | default 10 }}
            periodSeconds: {{ (.Values.app.readiness).period | default 5 }}
          {{- with .Values.app.lifecycle }}
          lifecycle:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.app.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range $name := .Values.imagePullSecrets }}
      - name: {{ $name }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.restartPolicy | default "Always" }}
      hostNetwork: {{ .Values.hostNetwork | default false }}
      dnsPolicy: {{ .Values.dnsPolicy | default "ClusterFirst" }}
      serviceAccountName: {{ .Values.serviceAccount | default .Values.app.name }}



